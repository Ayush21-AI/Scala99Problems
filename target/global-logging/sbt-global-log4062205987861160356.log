[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 1.8.0_281)
[debug]       Load.loadUnit: plugins took 86.2624ms
[debug]       Load.loadUnit: defsScala took 0.2657ms
[debug] [Loading] Scanning directory C:\Users\goura\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\goura\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.4132 ms
[debug]           Load.resolveProject(global-plugins) took 37.3169ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\goura\.sbt\1.0\plugins, plugins: List(<none>))) took 72.5447ms
[debug] [Loading] Done in C:\Users\goura\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 88.668ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2263ms
[debug]     Load.loadUnit(file:/C:/Users/goura/.sbt/1.0/plugins/, ...) took 189.0824ms
[debug]   Load.apply: load took 326.894ms
[debug]   Load.apply: resolveProjects took 5.8365ms
[debug]   Load.apply: finalTransforms took 51.7852ms
[debug]   Load.apply: config.delegates took 7.5931ms
[debug]   Load.apply: Def.make(settings)... took 387.3065ms
[debug]   Load.apply: structureIndex took 113.8454ms
[debug]   Load.apply: mkStreams took 2.1241ms
[info] loading global plugins from C:\Users\goura\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3253.7202ms
[debug]           Load.loadUnit: plugins took 24.0789ms
[debug]           Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\goura\IdeaProjects\Scala99Problems\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\goura\IdeaProjects\Scala99Problems\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4753 ms
[debug]               Load.resolveProject(scala99problems-build) took 1.6099ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala99problems-build, base: C:\Users\goura\IdeaProjects\Scala99Problems\project, plugins: List(<none>))) took 3.5779ms
[debug] [Loading] Done in C:\Users\goura\IdeaProjects\Scala99Problems\project, returning: (scala99problems-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5.2419ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0078ms
[debug]         Load.loadUnit(file:/C:/Users/goura/IdeaProjects/Scala99Problems/project/, ...) took 30.1696ms
[debug]       Load.apply: load took 31.2822ms
[debug]       Load.apply: resolveProjects took 0.1157ms
[debug]       Load.apply: finalTransforms took 8.7364ms
[debug]       Load.apply: config.delegates took 0.6896ms
[debug]       Load.apply: Def.make(settings)... took 78.9373ms
[debug]       Load.apply: structureIndex took 23.8443ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from C:\Users\goura\IdeaProjects\Scala99Problems\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 342.5457ms
[debug]     Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\goura\IdeaProjects\Scala99Problems
[debug]       Load.loadUnit: mkEval took 6.7493ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\goura\IdeaProjects\Scala99Problems, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.1754 ms
[info] loading settings for project scala99problems from build.sbt ...
[debug]         Load.resolveProject(scala99problems) took 31.2503ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala99problems, base: C:\Users\goura\IdeaProjects\Scala99Problems, plugins: List(<none>))) took 39.9147ms
[debug] [Loading] Done in C:\Users\goura\IdeaProjects\Scala99Problems, returning: (scala99problems)
[debug]     Load.loadUnit: loadedProjectsRaw took 2940.888ms
[debug]     Load.loadUnit: cleanEvalClasses took 28.8841ms
[debug]   Load.loadUnit(file:/C:/Users/goura/IdeaProjects/Scala99Problems/, ...) took 3313.0752ms
[debug] Load.apply: load took 3316.3032ms
[debug] Load.apply: resolveProjects took 0.1533ms
[debug] Load.apply: finalTransforms took 23.656ms
[debug] Load.apply: config.delegates took 2.3835ms
[debug] Load.apply: Def.make(settings)... took 268.76ms
[debug] Load.apply: structureIndex took 34.2648ms
[debug] Load.apply: mkStreams took 0.1108ms
[info] set current project to Scala99Problems (in build file:/C:/Users/goura/IdeaProjects/Scala99Problems/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-6aa1cf8f0ba87a8e252c
[debug] Writing bsp connection file
[info] started sbt server
